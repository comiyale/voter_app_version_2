{"remainingRequest":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/src/views/Signup.vue?vue&type=style&index=0&id=024d905c&scoped=true&lang=css&","dependencies":[{"path":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/src/views/Signup.vue","mtime":1631302973000},{"path":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/green/Desktop/VOTER_APP_VERSION_2/voterapp_UI-master (1)/voterapp_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kdC1sb2dpbi0tY29udGFpbmVyIHsKICBtYXJnaW4tdG9wOiAtNSU7Cn0KCi5kdC1sb2dpbl9fYmctc2VjdGlvbiB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4uL3B1YmxpYy9hc3NldHMvaW1hZ2VzL2xvZ2luLWJhY2tncm91bmQuanBnKSAhaW1wb3J0YW50OwogIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDUgIWltcG9ydGFudDsKfQoKLmR0LWxvZ2luX19iZy1zZWN0aW9uOmJlZm9yZSB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4uL3B1YmxpYy9hc3NldHMvaW1hZ2VzL2xvZ2luLWJhY2tncm91bmQuanBnKSAhaW1wb3J0YW50OwogIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDUgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqaA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Signup.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <section class=\"dt-login--container\" style=\"margin-top: 2%;\">\n      <br />\n      <br />\n      <section class=\"dt-login__content-wrapper\">\n        <section class=\"dt-login__bg-section\">\n          <section class=\"dt-login__bg-content\">\n            <a href=\"#/Login\" style=\"float: left;margin-left: -40px;margin-top: -40px;color: #fff\">\n              <i class=\"fa fa-arrow-left\"></i>\n            </a>\n            <h1 class=\"dt-login__title\" style=\"margin-left: -15%;font-weight: 900\">{{appName}}</h1>\n            <p class=\"f-16\">Signup for a {{appName}} Account.</p>\n          </section>\n\n          <section class=\"dt-login__logo\">\n            <!-- <a class=\"dt-brand__logo-link\" href=\"#\" style=\"background-color: #333; padding: 8%;border-radius: 5%;margin-left: -13%;opacity: 0.9\">\n                        <img class=\"img img-responsive dt-brand__logo-img\" src=\"/assets/images/corporate-setup-logo.png\" v-bind:alt=\"appName\" style=\"width: 180px;border-radius: 10px;box-shadow: 3px 3px 3px #333333;\">\n            </a>-->\n          </section>\n        </section>\n\n        <section class=\"dt-login__content\">\n          <section class=\"dt-login__content-inner\">\n            <form>\n              <v-row justify=\"center\">\n                <v-dialog v-model=\"dialogCallResponse\" persistent max-width=\"290\">\n                  <v-card>\n                    <v-alert v-show=\"showErrorIcon\" dense text type=\"warning\">\n                      Error(s) with signup :\n                      <strong>{{serverReturnedErrors}}</strong>\n                    </v-alert>\n                    <sweetalert-icon icon=\"warning\" v-show=\"showErrorIcon\" />\n                  </v-card>\n\n                  <v-card>\n                    <v-alert v-show=\"showSuccessIcon\" dense text type=\"success\">\n                      An email verfication link has been sent to\n                      <strong>({{email}})</strong>\n                    </v-alert>\n                    <sweetalert-icon icon=\"success\" v-show=\"showSuccessIcon\" />\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"green darken-1\" text @click=\"dialogCallResponse = false\">Close</v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n              </v-row>\n\n              <v-dialog v-model=\"dialog\" hide-overlay persistent width=\"300\">\n                <v-card color=\"green\" dark>\n                  <v-card-text>\n                    Sending Request Please Stand By\n                    <v-progress-linear indeterminate color=\"white\" class=\"mb-0\"></v-progress-linear>\n                  </v-card-text>\n                </v-card>\n              </v-dialog>\n\n              <v-text-field\n                v-model=\"firstName\"\n                :error-messages=\"firstNameErrors\"\n                :counter=\"100\"\n                label=\"First Name\"\n                required\n                @input=\"$v.firstName.$touch()\"\n                @blur=\"$v.firstName.$touch()\"\n              ></v-text-field>\n\n              <v-text-field\n                v-model=\"middleName\"\n                :error-messages=\"firstNameErrors\"\n                :counter=\"100\"\n                label=\"Middle Name\"\n                required\n                @input=\"$v.firstName.$touch()\"\n                @blur=\"$v.firstName.$touch()\"\n              ></v-text-field>\n\n              <v-text-field\n                v-model=\"lastName\"\n                :error-messages=\"lastNameErrors\"\n                :counter=\"100\"\n                label=\"Last Name\"\n                required\n                @input=\"$v.lastName.$touch()\"\n                @blur=\"$v.lastName.$touch()\"\n              ></v-text-field>\n\n              <v-select v-model=\"sex\" :items=\"sexOptions\" :error-messages=\"sexErrors\" label=\"Sex\"></v-select>\n\n              <v-text-field v-model=\"age\" s :counter=\"100\" label=\"Age\" required></v-text-field>\n\n              <v-text-field v-model=\"mobile\" s :counter=\"50\" label=\"Mobile Number\" required></v-text-field>\n\n              <v-menu\n                ref=\"menu\"\n                v-model=\"dateOfBirthMenu\"\n                :close-on-content-click=\"false\"\n                transition=\"scale-transition\"\n                offset-y\n                max-width=\"290px\"\n                min-width=\"290px\"\n              >\n                <template v-slot:activator=\"{ on }\">\n                  <v-text-field\n                    v-model=\"dateOfBirth\"\n                    :error-messages=\"dateOfBirthErrors\"\n                    label=\"Date Of Birth\"\n                    prepend-icon\n                    readonly\n                    v-on=\"on\"\n                  ></v-text-field>\n                </template>\n                <v-date-picker v-model=\"dateOfBirth\" no-title :min=\"nowDate\" scrollable>\n                  <v-spacer></v-spacer>\n                  <v-btn text color=\"primary\" @click=\"menu = false\">Cancel</v-btn>\n                  <v-btn text color=\"primary\" @click=\"$refs.menu.save(date)\">OK</v-btn>\n                </v-date-picker>\n              </v-menu>\n\n              <v-text-field v-model=\"state\" :counter=\"150\" label=\"State\" required></v-text-field>\n\n              <img\n                class=\"img img-responsive dt-brand__logo-img\"\n                :src=\"scannedFingerSrc\"\n                v-bind:alt=\"appName\"\n                style=\"width: 180px;border-radius: 10px;box-shadow: 3px 3px 3px #333333;\"\n              />\n              <br />\n              <v-btn class=\"mr-4\" style=\"margin-left: 20px;\" @click=\"captureFP\">Scan</v-btn>\n\n              <br />\n              <hr />\n\n              <v-checkbox\n                v-model=\"termsAndConditions\"\n                :error-messages=\"termsAndConditionsErrors\"\n                label=\"Do you agree to our terms and conditions?\"\n                required\n                @change=\"$v.termsAndConditions.$touch()\"\n                @blur=\"$v.termsAndConditions.$touch()\"\n              ></v-checkbox>\n\n              <v-btn class=\"mr-4\" @click=\"submit\">Signup</v-btn>\n              <v-btn @click=\"clear\">clear</v-btn>\n            </form>\n          </section>\n        </section>\n      </section>\n    </section>\n  </v-row>\n</template>\n\n<script>\nimport store from \"../store\";\nimport axios from \"axios\";\nimport { validationMixin } from \"vuelidate\";\nimport { required, maxLength, email } from \"vuelidate/lib/validators\";\n\nexport default {\n  name: \"Login\",\n  created: function() {\n    let tempToken = localStorage.getItem(store.state.setTokenLocalStorageKey);\n    if (tempToken !== \"\") {\n      // GOT TOKEN, SO USER HAS LOGIN BEFORE NOW\n      this.$router.push(\"ManageUsersCrud\");\n    } else {\n      // DON'T HAVE TOKEN\n      localStorage.setItem(store.state.setIsLoginLocalStorageKey, false);\n      localStorage.setItem(store.state.setTokenLocalStorageKey, \"\");\n    }\n  },\n  mixins: [validationMixin],\n  validations: {\n    name: { required, maxLength: maxLength(100) },\n    email: { required, maxLength: maxLength(100), email },\n    phone: { required, maxLength: maxLength(50) },\n    password: { required, maxLength: maxLength(50) },\n    confirmPassword: { required, maxLength: maxLength(50) },\n    termsAndConditions: { required }\n  },\n  data: () => ({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    sex: \"\",\n    age: \"\",\n    mobile: \"\",\n    dateOfBirth: \"\",\n\n    appName: store.state.appName,\n    interviewDate: \"\",\n    interviewTime: null,\n    dateOfBirthMenu: false,\n    showPassword: false,\n    confirmShowPassword: false,\n    showErrorIcon: false,\n    showSuccessIcon: false,\n    dialog: false,\n    dialogCallResponse: false,\n    sexOptions: [\n      { text: \"Male\", value: \"male\" },\n      { text: \"Female\", value: \"female\" }\n    ],\n    endpoint: store.state.urlStore.baseUrlAuth + store.state.urlStore.signupUrl,\n    scanFingerUrl: store.state.urlStore.scanFingerUrl,\n    scannedFingerData: null,\n    scannedFingerSrc: \"/assets/images/PlaceFinger.bmp\",\n    // name: \"Cliquedom\",\n    // email: \"greendublin007@gmail.com\",\n    // password: \"1234567\",\n    // phone: \"+2347032090809\",\n    // confirmPassword: \"1234567\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    confirmPassword: \"\",\n    termsAndConditions: null,\n    serverReturnedErrors: null,\n    objectToSend: {\n      name: null,\n      email: null,\n      password: null,\n      phone: null\n    }\n  }),\n  computed: {\n    firstNameErrors() {\n      const errors = [];\n      if (!this.$v.firstName.$dirty) return errors;\n      !this.$v.firstName.maxLength &&\n        errors.push(\"First Name must be no more than 100 characters long\");\n      !this.$v.firstName.required && errors.push(\"First Name is required\");\n      return errors;\n    },\n    middleNameErrors() {\n      const errors = [];\n      if (!this.$v.middleName.$dirty) return errors;\n      !this.$v.middleName.maxLength &&\n        errors.push(\"Middle Name must be no more than 100 characters long\");\n      !this.$v.middleName.required && errors.push(\"Middle Name is required\");\n      return errors;\n    },\n    lastNameErrors() {\n      const errors = [];\n      if (!this.$v.lastName.$dirty) return errors;\n      !this.$v.lastName.maxLength &&\n        errors.push(\"Last Name must be no more than 100 characters long\");\n      !this.$v.lastName.required && errors.push(\"Last Name is required\");\n      return errors;\n    },\n    ageErrors() {\n      const errors = [];\n      if (!this.$v.age.$dirty) return errors;\n      !this.$v.age.required && errors.push(\"Age is required\");\n      return errors;\n    },\n    sexErrors() {\n      const errors = [];\n      if (!this.$v.sex.$dirty) return errors;\n      !this.$v.sex.required && errors.push(\"Sex is required\");\n      return errors;\n    },\n    dateOfBirthErrors() {\n      const errors = [];\n      if (!this.$v.dateOfBirth.$dirty) return errors;\n      !this.$v.dateOfBirth.required && errors.push(\"Date Of Birth is required\");\n      return errors;\n    },\n    termsAndConditionsErrors() {\n      const errors = [];\n      if (!this.$v.termsAndConditions.$dirty) return errors;\n      !this.$v.termsAndConditions.required &&\n        errors.push(\"Must accept terms and conditions\");\n      return errors;\n    }\n  },\n  methods: {\n    submit() {\n      this.$v.$touch();\n      if (!this.$v.$invalid) {\n        this.dialog = true;\n        let vmObjectInstance = this;\n        this.objectToSend.name = this.name;\n        this.objectToSend.password = this.password;\n        this.objectToSend.email = this.email;\n        this.objectToSend.phone = this.phone;\n        let headers = this.objectToSend;\n\n        this.dialogCallResponse = true;\n        this.showErrorIcon = false;\n        this.showSuccessIcon = false;\n        this.signupUrlCall(vmObjectInstance, headers);\n      }\n    },\n    clear() {\n      this.$v.$reset();\n      this.$router.go(); // reloads the page\n    },\n    signupUrlCall(vmObjectInstance, headers) {\n      axios\n        .post(this.endpoint, headers)\n        .then(function(response) {\n          vmObjectInstance.dialog = false;\n\n          if (response.data.status) {\n            vmObjectInstance.dialogCallResponse = true;\n            vmObjectInstance.showSuccessIcon = true;\n            vmObjectInstance.showErrorIcon = false;\n\n            setTimeout(() => {\n              this.$v.$reset();\n            }, store.state.alertLongTimeout);\n          } else {\n            vmObjectInstance.dialogCallResponse = true;\n            vmObjectInstance.showErrorIcon = true;\n            vmObjectInstance.showSuccessIcon = false;\n\n            vmObjectInstance.serverReturnedErrors = `${response.data.errors.email}  ${response.data.errors.name}`;\n          }\n        })\n        .catch(function(error) {\n          console.error(error);\n          vmObjectInstance.dialog = false;\n          vmObjectInstance.dialogCallResponse = true;\n        });\n    },\n    captureFP() {\n      this.CallSGIFPGetData(this.SuccessFunc, this.ErrorFunc);\n    },\n    SuccessFunc(result) {\n      if (result.ErrorCode == 0) {\n        /* \tDisplay BMP data in image tag\n              BMP data is in base 64 format \n          */\n        if (result != null && result.BMPBase64.length > 0) {\n          this.scannedFingerData = result;\n          this.scannedFingerSrc = \"data:image/bmp;base64,\" + result.BMPBase64;\n        }\n        // var tbl = \"<table border=1>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> Serial Number of device </td>\";\n        // tbl += \"<td> <b>\" + result.SerialNumber + \"</b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> Image Height</td>\";\n        // tbl += \"<td> <b>\" + result.ImageHeight + \"</b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> Image Width</td>\";\n        // tbl += \"<td> <b>\" + result.ImageWidth + \"</b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> Image Resolution</td>\";\n        // tbl += \"<td> <b>\" + result.ImageDPI + \"</b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> Image Quality (1-100)</td>\";\n        // tbl += \"<td> <b>\" + result.ImageQuality + \"</b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> NFIQ (1-5)</td>\";\n        // tbl += \"<td> <b>\" + result.NFIQ + \"</b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> Template(base64)</td>\";\n        // tbl += \"<td> <b> <textarea rows=8 cols=50>\" + result.TemplateBase64 + \"</textarea></b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> Image WSQ Size</td>\";\n        // tbl += \"<td> <b>\" + result.WSQImageSize + \"</b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"<tr>\";\n        // tbl += \"<td> EncodeWSQ(base64)</td>\";\n        // tbl += \"<td> <b> <textarea rows=8 cols=50>\" + result.WSQImage + \"</textarea></b> </td>\";\n        // tbl += \"</tr>\";\n        // tbl += \"</table>\";\n        //document.getElementById('result').innerHTML = tbl;\n      } else {\n        //alert(\"Fingerprint Capture Error Code:  \" + result.ErrorCode + \".\\nDescription:  \" + ErrorCodeToString(result.ErrorCode) + \".\");\n      }\n    },\n    ErrorFunc(status) {\n      /* \t\n            If you reach here, user is probabaly not running the \n            service. Redirect the user to a page where he can download the\n            executable and install it. \n        */\n      alert(\"Check if SGIBIOSRV is running; Status = \" + status + \":\");\n    },\n    CallSGIFPGetData(successCall, failCall) {\n      // 8.16.2017 - At this time, only SSL client will be supported.\n      var xmlhttp = new XMLHttpRequest();\n      xmlhttp.onreadystatechange = function() {\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n          let fpobject = JSON.parse(xmlhttp.responseText);\n          successCall(fpobject);\n        } else if (xmlhttp.status == 404) {\n          failCall(xmlhttp.status);\n        }\n      };\n      var params = \"Timeout=\" + \"10000\";\n      params += \"&Quality=\" + \"50\";\n      // params += \"&licstr=\" + encodeURIComponent(secugen_lic);\n      params += \"&templateFormat=\" + \"ISO\";\n      params += \"&imageWSQRate=\" + \"0.75\";\n      console.log;\n      xmlhttp.open(\"POST\", this.scanFingerUrl, true);\n      xmlhttp.send(params);\n\n      xmlhttp.onerror = function() {\n        failCall(xmlhttp.statusText);\n      };\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.dt-login--container {\n  margin-top: -5%;\n}\n\n.dt-login__bg-section {\n  background-image: url(../../public/assets/images/login-background.jpg) !important;\n  background-color: #28a745 !important;\n}\n\n.dt-login__bg-section:before {\n  background-image: url(../../public/assets/images/login-background.jpg) !important;\n  background-color: #28a745 !important;\n}\n</style>\n\n"]}]}